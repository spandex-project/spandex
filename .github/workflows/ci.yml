---
name: CI
on: push

env:
  DEFAULT_ELIXIR_VERSION: '1.14.5'
  DEFAULT_OTP_VERSION: '25.3.2'

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.DEFAULT_ELIXIR_VERSION }}
          otp-version: ${{ env.DEFAULT_OTP_VERSION }}
      - run: mix format --check-formatted
  lint:
    name: Perform static code analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.DEFAULT_ELIXIR_VERSION }}
          otp-version: ${{ env.DEFAULT_OTP_VERSION }}
      - name: Get deps cache
        uses: actions/cache@v3
        with:
          path: deps/
          key: deps-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ hashFiles('mix.lock') }}
            deps-
      - name: Get build cache
        uses: actions/cache@v3
        with:
          path: _build/
          key: build-${{ runner.os }}-${{ env.DEFAULT_OTP_VERSION }}-${{ env.DEFAULT_ELIXIR_VERSION }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            build-${{ runner.os }}-${{ env.DEFAULT_OTP_VERSION }}-${{ env.DEFAULT_ELIXIR_VERSION }}-${{ hashFiles('mix.lock') }}
            build-${{ runner.os }}-${{ env.DEFAULT_OTP_VERSION }}-${{ env.DEFAULT_ELIXIR_VERSION }}-
      - name: Install deps
        run: mix deps.get
      - run: mix credo --strict
  test:
    name: Test on Elixir ${{ matrix.elixir }} (OTP ${{ matrix.otp }})
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        elixir: ['1.11.4', '1.12.3', '1.13.4', '1.14.5']
        otp: ['23.3.4.18', '24.3.4.11']
        include:
          - elixir: '1.14.5'
            otp: '25.3.2'
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - name: Get deps cache
        uses: actions/cache@v3
        with:
          path: deps/
          key: deps-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ hashFiles('mix.lock') }}
            deps-
      - name: Get build cache
        uses: actions/cache@v3
        with:
          path: _build/
          key: build-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            build-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}
            build-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-
      - name: Install deps
        run: mix deps.get
      - name: Compile code
        run: mix compile --warnings-as-errors
      - name: Calculate coverage
        run: mix coveralls.github
  dialyze:
    name: Dialyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.DEFAULT_ELIXIR_VERSION }}
          otp-version: ${{ env.DEFAULT_OTP_VERSION }}
      - name: Restore PLT cache
        id: plt_cache
        uses: actions/cache/restore@v3
        with:
          key: plt-${{ runner.os }}-${{ env.DEFAULT_OTP_VERSION }}-${{ env.DEFAULT_ELIXIR_VERSION }}-${{ hashFiles('mix.lock') }}
          restore-keys: plt-${{ runner.os }}-${{ env.DEFAULT_OTP_VERSION }}-${{ env.DEFAULT_ELIXIR_VERSION }}-
          path: priv/plts
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt
      - name: Save PLT cache
        id: plt_cache_save
        uses: actions/cache/save@v3
        if: steps.plt_cache.outputs.cache-hit != 'true'
        with:
          key: plt-${{ runner.os }}-${{ env.DEFAULT_OTP_VERSION }}-${{ env.DEFAULT_ELIXIR_VERSION }}-${{ hashFiles('mix.lock') }}
          path: priv/plts
      - name: Run dialyzer
        run: mix dialyzer --format github
